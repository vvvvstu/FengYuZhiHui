<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"> <!-- bean definitions here -->


                                <!--   spring 的形式的配置文件   -->

        <!--  引入外部配置文件properties      -->
        <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
        <!--  连接数据库 ，这步本来在mybatis-config.xml里 -->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
            <property name="username" value="${jdbc.username}"></property>
            <property name="password" value="${jdbc.password}"></property>
            <property name="url" value="${jdbc.url}"></property>
            <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        </bean>
            <!--  使用sqlSession调用方法  -->
        <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 得到SqlSessionFactoryBean对象 -->
            <!-- 注入数据源 -->
            <property name="dataSource" ref="dataSource"> </property>
            <!-- 引入mybatis配置文件 （在 applicationContext-dao.xml 被记载后他会自动被加载）-->
<!--            <property name="configLocation" value="classpath:mybatis-config.xml.bak"> </property>-->
            <property name="plugins">
                <array>
                    <bean class="com.github.pagehelper.PageInterceptor">
                        <property name="properties">
                            <!--使用下面的方式配置参数，一行配置一个 -->
                            <value>
                                <!--                            -->
                                helperDialect=mysql
                            </value>
                        </property>
                    </bean>
                </array>
            </property>
        </bean>

        <!-- 扫描mapper 加载mapper -->
        <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.qf.dao"></property>
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
        </bean>

        <!-- 扫描对应包下的注解，也可以在spring 下进行扫描，分模块开发下各扫各的 -->
        <context:component-scan base-package="com.qf"></context:component-scan>

        <!-- 配置aop -->

        <!-- 配置事务 -->




</beans>